name: Hackintosh CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: "0 */8 * * *"
jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: ilammy/setup-nasm@v1
      - uses: actions/checkout@v2.2.0
      # Prepare for release and src results
      - name: Prepare Make Dir
        run: |
          mkdir -p $GITHUB_WORKSPACE/Sources $GITHUB_WORKSPACE/Release
          xcodebuild -version
      - name: Clone Code
        run: |
          cd $GITHUB_WORKSPACE/Sources
          git clone https://github.com/acidanthera/Lilu
          git clone https://github.com/acidanthera/VirtualSMC
          git clone https://github.com/acidanthera/AirportBrcmFixup
          git clone https://github.com/acidanthera/AppleALC
          git clone https://github.com/acidanthera/WhateverGreen
          git clone https://github.com/acidanthera/IOJones
          git clone https://github.com/acidanthera/CPUFriend
          git clone https://github.com/acidanthera/RTCMemoryFixup
          git clone https://github.com/Mieze/IntelMausiEthernet
          git clone https://github.com/Mieze/RTL8111_driver_for_OS_X
          git clone https://github.com/Mieze/AtherosE2200Ethernet
          git clone https://github.com/Mieze/RealtekRTL8100
          git clone https://github.com/osy86/ThunderboltReset
          git clone https://github.com/acidanthera/DebugEnhancer
          git clone https://github.com/Mieze/LucyRTL8125Ethernet
          git clone https://github.com/acidanthera/OpenCorePkg
          git clone https://github.com/acidanthera/VoodooInput
          git clone https://github.com/acidanthera/VoodooPS2
          git clone https://github.com/acidanthera/IntelMausi.git
          git clone https://github.com/al3xtjames/NoTouchID.git
          git clone https://github.com/OpenIntelWireless/IntelBluetoothFirmware
          git clone https://github.com/OpenIntelWireless/itlwm.git
      - name: Copy Lilu VoodooInput  Debug File
        run: |
          mkdir -p $GITHUB_WORKSPACE/Release/tmp
          cd $GITHUB_WORKSPACE/Sources
          xcodebuild -project ./Lilu/Lilu.xcodeproj -configuration Debug clean build ARCHS=x86_64 ONLY_ACTIVE_ARCH=YES CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release/tmp
          xcodebuild -project ./VoodooInput/VoodooInput.xcodeproj -configuration Debug clean build ARCHS=x86_64 ONLY_ACTIVE_ARCH=YES CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release/tmp
          # copy lib
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./WhateverGreen
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./AppleALC
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./AirportBrcmFixup
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./VirtualSMC
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./ThunderboltReset
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./DebugEnhancer
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./NoTouchID
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./RTCMemoryFixup
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./CPUFriend
          cp -r $GITHUB_WORKSPACE/Release/tmp/VoodooInput.kext ./VoodooPS2
          # clear
          rm -rf $GITHUB_WORKSPACE/Release/tmp
      - name: Build Kext
        id: Kext
        run: |
          # build
          cd $GITHUB_WORKSPACE/Sources/AirportBrcmFixup/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/WhateverGreen/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/AppleALC/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/VirtualSMC/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/IOJones/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/IntelMausiEthernet/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/RTL8111_driver_for_OS_X/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/AtherosE2200Ethernet/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/RealtekRTL8100/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/ThunderboltReset/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/DebugEnhancer/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/VoodooInput/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/VoodooPS2/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/NoTouchID/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/RTCMemoryFixup/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/CPUFriend/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/IntelMausi/
          xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          echo "::set-output name=status::success"
      #    cd $GITHUB_WORKSPACE/Sources/IntelBluetoothFirmware/
      #    xcodebuild -configuration Release CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
      #    cd $GITHUB_WORKSPACE/Sources/itlwm/
      #    xcodebuild -target itlwm -configuration Release -project itlwm.xcodeproj CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
      # - name: Build OpenCore
      #   run: |
      #     cd $GITHUB_WORKSPACE/Sources/OpenCorePkg
      #     sh build_oc.tool
      #     cp $GITHUB_WORKSPACE/Sources/OpenCorePkg/Binaries/* $GITHUB_WORKSPACE/Release
    # Êï¥ÁêÜÊñá‰ª∂
      - name: Organize Files
        id: organize
        run: |
          cd Release/*
          rm -rf package
          rm -rf *dSYM
          rm -rf Tools
          echo ::set-env name=RELEASE_DATE::"$(TZ=UTC-8 date +"%Y-%m-%d")"
          echo "::set-env name=FIRMWARE::$PWD"
          echo "::set-output name=status::success"
          
        # ‰∏ä‰º†Âõ∫‰ª∂
      - name: Upload Firmware Directory
        uses: actions/upload-artifact@main
        if: steps.kext.outputs.status == 'success' && !cancelled()
        with:
          name: ${{ env.RELEASE_TAG }}-Hackintosh-Kext
          path: ${{ env.FIRMWARE }}
      
      # ÁîüÊàêÊ†áÁ≠æ
      - name: Generate Tag
        id: tag
        if: steps.organize.outputs.status == 'success' && !cancelled()
        run: |
          echo ::set-env name=RELEASE_TAG::"$(TZ=UTC-8 date +"%Y-%m-%d")"
          echo "::set-output name=status::success"
    
    # ÂèëË°åÂõ∫‰ª∂
      - name: Upload Firmware To Release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          name:  Hackintosh-KextüöÄ | Ëá™Âä®ÁºñËØë / ${{ env.RELEASE_TAG }}
          tag_name: ${{ env.RELEASE_DATE }}
          body: |            
            1„ÄÅÊú¨Âõ∫‰ª∂‰∏∫Ëá™Âä®ÁºñËØë
            2„ÄÅÂèëË°åÁâà‰∏≠Âè™Êèê‰æõÂÆåÊï¥ÁöÑÂõ∫‰ª∂
          files: ${{ env.FIRMWARE }}/*
