name: Hackintosh CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: "0 */3 * * *"
jobs:
  build:
    runs-on: macos-10.15
    steps:
      - uses: ilammy/setup-nasm@v1
      - uses: actions/checkout@v2.2.0
      # Prepare for release and src results
      - name: Prepare Make Dir
        run: |
          mkdir -p $GITHUB_WORKSPACE/Sources $GITHUB_WORKSPACE/Release
          xcodebuild -version
      - name: Clone Code
        run: |
          cd $GITHUB_WORKSPACE/Sources
          git clone --depth=1 https://github.com/acidanthera/Lilu
          git clone --depth=1 https://github.com/acidanthera/VirtualSMC
          git clone --depth=1 https://github.com/acidanthera/AirportBrcmFixup
          git clone --depth=1 https://github.com/acidanthera/AppleALC
          git clone --depth=1 https://github.com/acidanthera/WhateverGreen
          git clone --depth=1 https://github.com/acidanthera/IOJones
          git clone --depth=1 https://github.com/Mieze/IntelMausiEthernet
          git clone --depth=1 https://github.com/Mieze/RTL8111_driver_for_OS_X
          git clone --depth=1 https://github.com/Mieze/AtherosE2200Ethernet
          git clone --depth=1 https://github.com/Mieze/RealtekRTL8100
          git clone --depth=1 https://github.com/osy86/ThunderboltReset
          git clone --depth=1 https://github.com/acidanthera/DebugEnhancer
          git clone --depth=1 https://github.com/Mieze/LucyRTL8125Ethernet
          git clone --depth=1 https://github.com/acidanthera/OpenCorePkg
          git clone --depth=1 https://github.com/acidanthera/VoodooInput
          git clone --depth=1 https://github.com/acidanthera/VoodooPS2
      - name: Copy Lilu VoodooInput  Debug File
        run: |
          mkdir -p $GITHUB_WORKSPACE/Release/tmp
          cd $GITHUB_WORKSPACE/Sources
          xcodebuild -project ./Lilu/Lilu.xcodeproj -configuration Debug clean build ARCHS=x86_64 ONLY_ACTIVE_ARCH=YES CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release/tmp
          xcodebuild -project ./VoodooInput/VoodooInput.xcodeproj -configuration Debug clean build ARCHS=x86_64 ONLY_ACTIVE_ARCH=YES CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release/tmp
          # copy lib
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./WhateverGreen
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./AppleALC
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./AirportBrcmFixup
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./VirtualSMC
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./ThunderboltReset
          cp -r $GITHUB_WORKSPACE/Release/tmp/Lilu.kext ./DebugEnhancer
          cp -r $GITHUB_WORKSPACE/Release/tmp/VoodooInput.kext ./VoodooPS2
          # clear
          rm -rf $GITHUB_WORKSPACE/Release/tmp
      - name: Build Kext
        id: Kext
        run: |
          cd $GITHUB_WORKSPACE/Sources/AirportBrcmFixup/
          xcodebuild CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/WhateverGreen/
          xcodebuild CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/AppleALC/
          xcodebuild CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/VirtualSMC/
          xcodebuild CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/IOJones/
          xcodebuild CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/IntelMausiEthernet/
          xcodebuild CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/RTL8111_driver_for_OS_X/
          xcodebuild CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/AtherosE2200Ethernet/
          xcodebuild CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/RealtekRTL8100/
          xcodebuild CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/ThunderboltReset/
          xcodebuild CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/DebugEnhancer/
          xcodebuild CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/VoodooInput/
          xcodebuild CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
          cd $GITHUB_WORKSPACE/Sources/VoodooPS2/
          xcodebuild CONFIGURATION_BUILD_DIR=$GITHUB_WORKSPACE/Release
      # - name: Build OpenCore
      #   run: |
      #     cd $GITHUB_WORKSPACE/Sources/OpenCorePkg
      #     sh build_oc.tool
      #     cp $GITHUB_WORKSPACE/Sources/OpenCorePkg/Binaries/* $GITHUB_WORKSPACE/Release
      - name: Package Release
        run: |
          cd $GITHUB_WORKSPACE
          zip -q -r Release.zip $GITHUB_WORKSPACE/Release/*
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.0
        with:
          timeZone: 8
          format: 'YYYY-MM-DD-HH-mm-ss'
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "Hackintosh-${{ steps.time.outputs.time }}"
          release_name: "Hackintosh-${{ steps.time.outputs.time }}"
          body: |
            Hackintosh
            - Build-in Pickle formatter now recognizes numpy.array, pandas.DataFrame and pandas.Series
            - Value now can be saved as file
          draft: false
          prerelease: false
      - name: upload a release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Release.zip
          asset_name: "${{ steps.time.outputs.time }}-Release.zip"
          asset_content_type: application/zip